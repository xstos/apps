<#@ template language="C#" #>
<#@ assembly name="PresentationCore" #>
<#@ assembly name="PresentationFramework" #>
<#@ assembly name="System" #>
<#@ assembly name="System.Linq" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Drawing" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.ValueTuple" #>
<#@ assembly name="System.Windows.Forms" #>
<#@ assembly name="WindowsBase" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Windows.Controls" #>
<#@ import namespace="System.Windows" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
using KriterisEdit;
namespace KriterisEdit
{
public static partial class GlobalStatics { 
<#
    
    var uie = typeof(UIElement);
    typeof(DockPanel).Assembly.GetTypes().Where(t=>true
                && uie.IsAssignableFrom(t) 
                && t.IsPublic
                && t.Namespace=="System.Windows.Controls"
                && !t.IsGenericType
                && t.GetConstructors(BindingFlags.Instance | BindingFlags.Public).Any()
        )
        .Select(t => 
            $"public static {t.FullName} _{t.Name}() => new {t.FullName}();  "
        ).ToList().ForEach(WriteLine);
//     var nl = Environment.NewLine.ToCharArray();
// @"
// FileMask
// DroppedFiles
// DroppedFilesExpanded
// ".Trim().Split(nl).Select(s=>"public static CellRef "+s+";").ToList().ForEach(WriteLine);
//     //var file = @"C:\repos\xstos\apps\KriterisEdit\KriterisEdit.csproj";
//     //var xe = XElement.Parse(file);
    
#>

}
}